/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Finals;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Administrator
 */
public class Frame2Reservation extends javax.swing.JFrame {
    
    
    DateFormat dateFormat = new SimpleDateFormat("MM/dd/YY");
    Date date = new Date();
    String Date,Departure,Airliner,Terminal,FlightPrice2,Origin2,Destination2;
            
    public Frame2Reservation() {
        initComponents();
          DateField.setText(" "+dateFormat.format(date));
    }
    //Frame3Reservation FlightFata = new Show_Jtable_row_data();
    
    public void FlightDetails(String Flight,String Origin,String Destination){
        OriginField.setText(Origin);
        DestinationField.setText(Destination);
        FlightField.setText(Flight);
        Origin2 = Origin;
        Destination2 = Destination;
        
    }
    
      public void InsertData1(FileInputStream is){
        
    DefaultTableModel kent34 = (DefaultTableModel) FlightScheduleMorning.getModel();
        
    Scanner scan = new Scanner(is);
    String[] array;
    while (scan.hasNextLine()) {
        String line = scan.nextLine();
        if(line.indexOf(",")>-1)
            array = line.split(",");
        else
            array = line.split("\t");
        Object[] data = new Object[array.length];
        System.arraycopy(array, 0, data, 0, array.length);
        kent34.addRow(data);
   }
    FlightScheduleMorning.setModel(kent34);
    
    }  
      
      public void InsertData2(FileInputStream is){
        
    DefaultTableModel kent34 = (DefaultTableModel) FlightScheduleAfternoon.getModel();
        
    Scanner scan = new Scanner(is);
    String[] array;
    while (scan.hasNextLine()) {
        String line = scan.nextLine();
        if(line.indexOf(",")>-1)
            array = line.split(",");
        else
            array = line.split("\t");
        Object[] data = new Object[array.length];
        System.arraycopy(array, 0, data, 0, array.length);
        kent34.addRow(data);
   }
    FlightScheduleAfternoon.setModel(kent34);
    
    } 
    public void InsertData3(FileInputStream is){
        
    DefaultTableModel kent34 = (DefaultTableModel) FlightScheduleEvening.getModel();
        
    Scanner scan = new Scanner(is);
    String[] array;
    while (scan.hasNextLine()) {
        String line = scan.nextLine();
        if(line.indexOf(",")>-1)
            array = line.split(",");
        else
            array = line.split("\t");
        Object[] data = new Object[array.length];
        System.arraycopy(array, 0, data, 0, array.length);
        kent34.addRow(data);
   }
    FlightScheduleEvening.setModel(kent34);
    
    }    
    
  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        DestinationField = new javax.swing.JTextField();
        OriginField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        FlightScheduleMorning = new javax.swing.JTable();
        ViewMButton = new javax.swing.JButton();
        DateField = new javax.swing.JTextField();
        TimeField = new javax.swing.JTextField();
        FlightField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        FlightScheduleEvening = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        FlightScheduleAfternoon = new javax.swing.JTable();
        ViewAButton = new javax.swing.JButton();
        ViewEButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setOpaque(false);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel2.setText("FLIGHT SCHEDULES FOR");
        jLabel2.setOpaque(true);

        DestinationField.setEditable(false);

        OriginField.setEditable(false);

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel3.setText("To");
        jLabel3.setOpaque(true);

        FlightScheduleMorning.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Departure Time", "Airliner", "Terminal", "Lowest Seat Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        FlightScheduleMorning.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FlightScheduleMorningMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(FlightScheduleMorning);

        ViewMButton.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        ViewMButton.setText("View Available Morning Schedules");
        ViewMButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewMButtonActionPerformed(evt);
            }
        });

        DateField.setEditable(false);

        TimeField.setEditable(false);

        FlightField.setEditable(false);

        FlightScheduleEvening.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Departure Time", "Airliner", "Terminal", "Lowest Seat Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        FlightScheduleEvening.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FlightScheduleEveningMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(FlightScheduleEvening);

        FlightScheduleAfternoon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Departure Time", "Airliner", "Terminal", "Lowest Seat Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        FlightScheduleAfternoon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FlightScheduleAfternoonMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(FlightScheduleAfternoon);

        ViewAButton.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        ViewAButton.setText("View Available Afternoon Schedules");
        ViewAButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewAButtonActionPerformed(evt);
            }
        });

        ViewEButton.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        ViewEButton.setText("View Available Evening Schedules");
        ViewEButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewEButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(OriginField, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(ViewAButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(ViewMButton, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(DateField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TimeField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(149, 149, 149))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 2, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DestinationField, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(27, 27, 27))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(ViewEButton, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(252, 252, 252)
                        .addComponent(FlightField, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(TimeField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(DateField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(OriginField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(DestinationField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(FlightField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ViewMButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ViewAButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ViewEButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        OriginField.getAccessibleContext().setAccessibleDescription("");

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, 650, 500));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Finals/10642513-Global-Rays-Global-Corporate-Background-Blue-Twisted-Rays-and-Silver-World-Globe-Model-Horizontal-De-Stock-Photo.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ViewMButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewMButtonActionPerformed
           try {
          DefaultTableModel kent34 = (DefaultTableModel) FlightScheduleMorning.getModel();
          final FileInputStream is;
          File f = new File("D:\\Java File Handling\\UpdateFlightMorning.txt");
          is = new FileInputStream(f);
          InsertData1(is);
          
          Scanner scan = new Scanner(is);
          String[] array;
          while (scan.hasNextLine()) {
              String line = scan.nextLine();
              if(line.indexOf(",")>-1)
                  array = line.split(",");
              else
                  array = line.split("\t");
              Object[] data = new Object[array.length];
              System.arraycopy(array, 0, data, 0, array.length);
              kent34.addRow(data);
          }
          FlightScheduleMorning.setModel(kent34);
      } catch (FileNotFoundException ex) {
          Logger.getLogger(Frame2Reservation.class.getName()).log(Level.SEVERE, null, ex);
      }
      
     ViewMButton.setEnabled(false); 
    }//GEN-LAST:event_ViewMButtonActionPerformed

    private void FlightScheduleMorningMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FlightScheduleMorningMouseClicked
        int num = FlightScheduleMorning.getSelectedRow();
        TableModel kent = FlightScheduleMorning.getModel();
        Date = kent.getValueAt(num,0).toString();
        Departure = kent.getValueAt(num,1).toString();
        Airliner = kent.getValueAt(num,2).toString();
        Terminal = kent.getValueAt(num,3).toString();
        FlightPrice2 = kent.getValueAt(num,4).toString();
        Frame3Reservation kentawesome = new Frame3Reservation();
        kentawesome.SeatReservation(Date, Departure, Airliner, Terminal,FlightPrice2,Origin2,Destination2);
        kentawesome.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_FlightScheduleMorningMouseClicked

    private void FlightScheduleEveningMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FlightScheduleEveningMouseClicked
        int num = FlightScheduleEvening.getSelectedRow();
        TableModel kent = FlightScheduleEvening.getModel();
        Date = kent.getValueAt(num,0).toString();
        Departure = kent.getValueAt(num,1).toString();
        Airliner = kent.getValueAt(num,2).toString();
        Terminal = kent.getValueAt(num,3).toString();
        FlightPrice2 = kent.getValueAt(num,4).toString();
        Frame3Reservation kentawesome = new Frame3Reservation();
        kentawesome.SeatReservation(Date, Departure, Airliner, Terminal,FlightPrice2,Origin2,Destination2);
        kentawesome.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_FlightScheduleEveningMouseClicked

    private void FlightScheduleAfternoonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FlightScheduleAfternoonMouseClicked
        int num = FlightScheduleAfternoon.getSelectedRow();
        TableModel kent = FlightScheduleAfternoon.getModel();
        Date = kent.getValueAt(num,0).toString();
        Departure = kent.getValueAt(num,1).toString();
        Airliner = kent.getValueAt(num,2).toString();
        Terminal = kent.getValueAt(num,3).toString();
        FlightPrice2 = kent.getValueAt(num,4).toString();
        Frame3Reservation kentawesome = new Frame3Reservation();
        kentawesome.SeatReservation(Date, Departure, Airliner, Terminal,FlightPrice2,Origin2,Destination2);
        kentawesome.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_FlightScheduleAfternoonMouseClicked

    private void ViewAButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewAButtonActionPerformed
        try {
          DefaultTableModel kent34 = (DefaultTableModel) FlightScheduleAfternoon.getModel();
          final FileInputStream is;
          File f = new File("D:\\Java File Handling\\UpdateFlightAfternoon.txt");
          is = new FileInputStream(f);
          InsertData2(is);
          
          Scanner scan = new Scanner(is);
          String[] array;
          while (scan.hasNextLine()) {
              String line = scan.nextLine();
              if(line.indexOf(",")>-1)
                  array = line.split(",");
              else
                  array = line.split("\t");
              Object[] data = new Object[array.length];
              System.arraycopy(array, 0, data, 0, array.length);
              kent34.addRow(data);
          }
          FlightScheduleAfternoon.setModel(kent34);
      } catch (FileNotFoundException ex) {
          Logger.getLogger(Frame2Reservation.class.getName()).log(Level.SEVERE, null, ex);
      }
        ViewAButton.setEnabled(false);
    }//GEN-LAST:event_ViewAButtonActionPerformed

    private void ViewEButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewEButtonActionPerformed
         try {
          DefaultTableModel kent34 = (DefaultTableModel) FlightScheduleEvening.getModel();
          final FileInputStream is;
          File f = new File("D:\\Java File Handling\\UpdateFlightEvening.txt");
          is = new FileInputStream(f);
          InsertData3(is);
          
          Scanner scan = new Scanner(is);
          String[] array;
          while (scan.hasNextLine()) {
              String line = scan.nextLine();
              if(line.indexOf(",")>-1)
                  array = line.split(",");
              else
                  array = line.split("\t");
              Object[] data = new Object[array.length];
              System.arraycopy(array, 0, data, 0, array.length);
              kent34.addRow(data);
          }
          FlightScheduleEvening.setModel(kent34);
      } catch (FileNotFoundException ex) {
          Logger.getLogger(Frame2Reservation.class.getName()).log(Level.SEVERE, null, ex);
      }
         ViewEButton.setEnabled(false);
         
    }//GEN-LAST:event_ViewEButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame2Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame2Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame2Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame2Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame2Reservation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DateField;
    private javax.swing.JTextField DestinationField;
    private javax.swing.JTextField FlightField;
    private javax.swing.JTable FlightScheduleAfternoon;
    private javax.swing.JTable FlightScheduleEvening;
    private javax.swing.JTable FlightScheduleMorning;
    private javax.swing.JTextField OriginField;
    private javax.swing.JTextField TimeField;
    private javax.swing.JButton ViewAButton;
    private javax.swing.JButton ViewEButton;
    private javax.swing.JButton ViewMButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
