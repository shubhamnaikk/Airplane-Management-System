
package Finals;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;


public class Reservation extends javax.swing.JFrame {
    
    
   
   
    
    public Reservation() {
        initComponents();
       
    }
   
    public void CurrentCalendar(){
        
        Calendar cal = new GregorianCalendar();
        int month = cal.get(Calendar.MONTH);
        int day = cal.get(Calendar.DAY_OF_MONTH);
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        FlightScheduleMorning = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        FlightScheduleAfternoon = new javax.swing.JTable();
        ViewMButton = new javax.swing.JButton();
        ViewAButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        FlightScheduleEvening = new javax.swing.JTable();
        ViewEButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        FlightScheduleMorning.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Departure Time", "Airliner", "Terminal", "Lowest Seat Price"
            }
        ));
        jScrollPane1.setViewportView(FlightScheduleMorning);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 540, 100));

        FlightScheduleAfternoon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Departure Time", "Airliner", "Terminal", "Lowest Seat Price"
            }
        ));
        jScrollPane3.setViewportView(FlightScheduleAfternoon);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, 540, 90));

        ViewMButton.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        ViewMButton.setText("Menu Admin");
        ViewMButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewMButtonActionPerformed(evt);
            }
        });
        getContentPane().add(ViewMButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 430, 210, 40));

        ViewAButton.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        ViewAButton.setText("Delete Flight Schedule");
        ViewAButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewAButtonActionPerformed(evt);
            }
        });
        getContentPane().add(ViewAButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 430, 230, 40));

        FlightScheduleEvening.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Departure Time", "Airliner", "Terminal", "Lowest Seat Price"
            }
        ));
        jScrollPane2.setViewportView(FlightScheduleEvening);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 310, 540, 90));

        ViewEButton.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        ViewEButton.setText("View");
        ViewEButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewEButtonActionPerformed(evt);
            }
        });
        getContentPane().add(ViewEButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, 130, 40));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel2.setText("FLIGHT SCHEDULES");
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, 230, 50));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Finals/18 aircraft wallpaper.preview.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 480));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
      public void InsertData(FileInputStream is){
        
    DefaultTableModel kent34 = (DefaultTableModel) FlightScheduleMorning.getModel();
        
    Scanner scan = new Scanner(is);
    String[] array;
    while (scan.hasNextLine()) {
        String line = scan.nextLine();
        if(line.indexOf(",")>-1)
            array = line.split(",");
        else
            array = line.split("\t");
        Object[] data = new Object[array.length];
        System.arraycopy(array, 0, data, 0, array.length);
        kent34.addRow(data);
   }
    FlightScheduleMorning.setModel(kent34);
    
    } 
      
     public void InsertData2(FileInputStream is){
        
    DefaultTableModel kent34 = (DefaultTableModel) FlightScheduleAfternoon.getModel();
        
    Scanner scan = new Scanner(is);
    String[] array;
    while (scan.hasNextLine()) {
        String line = scan.nextLine();
        if(line.indexOf(",")>-1)
            array = line.split(",");
        else
            array = line.split("\t");
        Object[] data = new Object[array.length];
        System.arraycopy(array, 0, data, 0, array.length);
        kent34.addRow(data);
   }
    FlightScheduleAfternoon.setModel(kent34);
    
    }   
     
      public void InsertData3(FileInputStream is){
        
    DefaultTableModel kent34 = (DefaultTableModel) FlightScheduleEvening.getModel();
        
    Scanner scan = new Scanner(is);
    String[] array;
    while (scan.hasNextLine()) {
        String line = scan.nextLine();
        if(line.indexOf(",")>-1)
            array = line.split(",");
        else
            array = line.split("\t");
        Object[] data = new Object[array.length];
        System.arraycopy(array, 0, data, 0, array.length);
        kent34.addRow(data);
   }
    FlightScheduleEvening.setModel(kent34);
    
    }   
    private void ViewMButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewMButtonActionPerformed
       
        
        try {
                    BufferedWriter bw = new BufferedWriter (new FileWriter("D:\\Java File Handling\\UpdateFlightMorning.txt"));
                    bw.write("");
                    bw.close();
                } catch (IOException ex) {
                    Logger.getLogger(Frame3Reservation.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    BufferedWriter bw = new BufferedWriter (new FileWriter("D:\\Java File Handling\\UpdateFlightMorning.txt"));
                    for(int i=0;i<FlightScheduleMorning.getRowCount(); i++){
                        for(int j=0;j<FlightScheduleMorning.getColumnCount(); j++){
                            bw.write((String)FlightScheduleMorning.getModel().getValueAt(i,j)+"\t");
                        }
                        bw.newLine();
                        
                    }
                    bw.close();
                } catch (IOException ex) {
                    Logger.getLogger(Frame3Reservation.class.getName()).log(Level.SEVERE, null, ex);
                }
                
        try {
                    BufferedWriter bw = new BufferedWriter (new FileWriter("D:\\Java File Handling\\UpdateFlightAfternoon.txt"));
                    bw.write("");
                    bw.close();
                } catch (IOException ex) {
                    Logger.getLogger(Frame3Reservation.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    BufferedWriter bw = new BufferedWriter (new FileWriter("D:\\Java File Handling\\UpdateFlightAfternoon.txt"));
                    for(int i=0;i<FlightScheduleAfternoon.getRowCount(); i++){
                        for(int j=0;j<FlightScheduleAfternoon.getColumnCount(); j++){
                            bw.write((String)FlightScheduleAfternoon.getModel().getValueAt(i,j)+"\t");
                        }
                        bw.newLine();
                        
                    }
                    bw.close();
                } catch (IOException ex) {
                    Logger.getLogger(Frame3Reservation.class.getName()).log(Level.SEVERE, null, ex);
                }   
        try {
                    BufferedWriter bw = new BufferedWriter (new FileWriter("D:\\Java File Handling\\UpdateFlightEvening.txt"));
                    bw.write("");
                    bw.close();
                } catch (IOException ex) {
                    Logger.getLogger(Frame3Reservation.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    BufferedWriter bw = new BufferedWriter (new FileWriter("D:\\Java File Handling\\UpdateFlightEvening.txt"));
                    for(int i=0;i<FlightScheduleEvening.getRowCount(); i++){
                        for(int j=0;j<FlightScheduleEvening.getColumnCount(); j++){
                            bw.write((String)FlightScheduleEvening.getModel().getValueAt(i,j)+"\t");
                        }
                        bw.newLine();
                        
                    }
                    bw.close();
                } catch (IOException ex) {
                    Logger.getLogger(Frame3Reservation.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                draft1 kent = new draft1();
                kent.setVisible(true);
                this.dispose();

        
    }//GEN-LAST:event_ViewMButtonActionPerformed

    private void ViewAButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewAButtonActionPerformed
            DefaultTableModel kent = (DefaultTableModel) FlightScheduleMorning.getModel();
            DefaultTableModel kentjohn = (DefaultTableModel) FlightScheduleAfternoon.getModel();
            DefaultTableModel kents = (DefaultTableModel) FlightScheduleEvening.getModel();
            
            
            if(FlightScheduleMorning.getSelectedRow()==-1){
                
            }
            else{
            kent.removeRow(FlightScheduleMorning.getSelectedRow()); 
        }
              if(FlightScheduleAfternoon.getSelectedRow()==-1){
                
            }
            else{
            kentjohn.removeRow(FlightScheduleAfternoon.getSelectedRow()); 
        }
                if(FlightScheduleEvening.getSelectedRow()==-1){
                
            }
            else{
            kents.removeRow(FlightScheduleEvening.getSelectedRow()); 
        }
            
           
                
            
            
    }//GEN-LAST:event_ViewAButtonActionPerformed

    private void ViewEButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewEButtonActionPerformed
        
        try {
            DefaultTableModel kent34 = (DefaultTableModel) FlightScheduleMorning.getModel();
            final FileInputStream is;
            File f = new File("D:\\Java File Handling\\UpdateFlightMorning.txt");
            is = new FileInputStream(f);
            InsertData(is);

            Scanner scan = new Scanner(is);
            String[] array;
            while (scan.hasNextLine()) {
                String line = scan.nextLine();
                if(line.indexOf(",")>-1)
                array = line.split(",");
                else
                array = line.split("\t");
                Object[] data = new Object[array.length];
                System.arraycopy(array, 0, data, 0, array.length);
                kent34.addRow(data);
            }
            FlightScheduleMorning.setModel(kent34);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Frame2Reservation.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            DefaultTableModel kent34 = (DefaultTableModel) FlightScheduleAfternoon.getModel();
            final FileInputStream is;
            File f = new File("D:\\Java File Handling\\UpdateFlightAfternoon.txt");
            is = new FileInputStream(f);
            InsertData2(is);

            Scanner scan = new Scanner(is);
            String[] array;
            while (scan.hasNextLine()) {
                String line = scan.nextLine();
                if(line.indexOf(",")>-1)
                array = line.split(",");
                else
                array = line.split("\t");
                Object[] data = new Object[array.length];
                System.arraycopy(array, 0, data, 0, array.length);
                kent34.addRow(data);
            }
            FlightScheduleAfternoon.setModel(kent34);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Frame2Reservation.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            DefaultTableModel kent34 = (DefaultTableModel) FlightScheduleEvening.getModel();
            final FileInputStream is;
            File f = new File("D:\\Java File Handling\\UpdateFlightEvening.txt");
            is = new FileInputStream(f);
            InsertData3(is);

            Scanner scan = new Scanner(is);
            String[] array;
            while (scan.hasNextLine()) {
                String line = scan.nextLine();
                if(line.indexOf(",")>-1)
                array = line.split(",");
                else
                array = line.split("\t");
                Object[] data = new Object[array.length];
                System.arraycopy(array, 0, data, 0, array.length);
                kent34.addRow(data);
            }
            FlightScheduleEvening.setModel(kent34);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Frame2Reservation.class.getName()).log(Level.SEVERE, null, ex);
        }
        ViewEButton.setEnabled(false);
    }//GEN-LAST:event_ViewEButtonActionPerformed

    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reservation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable FlightScheduleAfternoon;
    private javax.swing.JTable FlightScheduleEvening;
    private javax.swing.JTable FlightScheduleMorning;
    private javax.swing.JButton ViewAButton;
    private javax.swing.JButton ViewEButton;
    private javax.swing.JButton ViewMButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
